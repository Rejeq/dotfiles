# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Iosevka Nerd Font Mono 10

smart_borders on

# Hide the mouse when it's inactive
exec --no-startup-id unclutter --timeout 20

# Remap menu key with super key
exec --no-startup-id xmodmap -e 'keycode 135 = Super_R' && xset -r 135

# Start wallpaper
exec --no-startup-id sh ~/.fehbg

# Start polkit gui auth
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

bindsym Print exec flameshot gui
bindsym Shift+Print exec "flameshot gui --raw | tesseract -l rus stdin stdout | xclip -in -selection clipboard"


# Disable mouse movement when switching beetween monitors
mouse_warping none

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

for_window [class="ffplay"] floating enable
for_window [class="scrcpy"] floating enable
for_window [class="vlc"] floating enable
for_window [class="kronometer"] floating enable
for_window [title="^Android Emulator.*"] floating enable
for_window [title="Figure *"] floating enable

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id dmenu_run -fn 'Iosevka Nerd Font Mono 10'

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+z split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+m floating toggle

# change focus between tiling / floating windows
bindsym $mod+m focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+s focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

mode "mouse" {
  set $slow 1
  set $quick 10
  set $fast 50

  # Mouse movement (slow/fine-tuned) -- vim keybindings
  bindsym h exec xdotool mousemove_relative -- -$slow 0
  bindsym j exec xdotool mousemove_relative 0 $slow
  bindsym k exec xdotool mousemove_relative -- 0 -$slow
  bindsym l exec xdotool mousemove_relative $slow 0

  # Mouse movement (slow/fine-tuned) -- arrow keys
  bindsym Left exec xdotool mousemove_relative -- -$slow 0
  bindsym Down exec xdotool mousemove_relative 0 $slow
  bindsym Up exec xdotool mousemove_relative -- 0 -$slow
  bindsym Right exec xdotool mousemove_relative $slow 0

  # Mouse movement (quicker) -- vim keybindings
  bindsym $mod+h exec xdotool mousemove_relative -- -$quick 0
  bindsym $mod+j exec xdotool mousemove_relative 0 $quick
  bindsym $mod+k exec xdotool mousemove_relative -- 0 -$quick
  bindsym $mod+l exec xdotool mousemove_relative $quick 0

  # Mouse movement (quicker) -- arrow keys
  bindsym $mod+Left exec xdotool mousemove_relative -- -$quick 0
  bindsym $mod+Down exec xdotool mousemove_relative 0 $quick
  bindsym $mod+Up exec xdotool mousemove_relative -- 0 -$quick
  bindsym $mod+Right exec xdotool mousemove_relative $quick 0

  # Mouse movement (fast) -- vim keybindings
  bindsym $mod+Shift+h exec xdotool mousemove_relative -- -$fast 0
  bindsym $mod+Shift+j exec xdotool mousemove_relative 0 $fast
  bindsym $mod+Shift+k exec xdotool mousemove_relative -- 0 -$fast
  bindsym $mod+Shift+l exec xdotool mousemove_relative $fast 0

   # Mouse movement (fast) -- arrow keys
  bindsym $mod+Shift+Left exec xdotool mousemove_relative -- -$fast 0
  bindsym $mod+Shift+Down exec xdotool mousemove_relative 0 $fast
  bindsym $mod+Shift+Up exec xdotool mousemove_relative -- 0 -$fast
  bindsym $mod+Shift+Right exec xdotool mousemove_relative $fast 0

   # Left Click
  bindsym f exec xdotool click 1

  # Middle Click
  bindsym d exec xdotool click 2

  # Right Click
  bindsym s exec xdotool click 3

  # Left Click-and-drag
  bindsym Shift+f exec xdotool mousedown 1

  # Middle Click-and-drag
  bindsym Shift+d exec xdotool mousedown 2

  # Right Click-and-drag
  bindsym Shift+s exec xdotool mousedown 3

  # Left Drag release
  bindsym $mod+f exec xdotool mouseup 1

  # Middle Drag release
  bindsym $mod+d exec xdotool mouseup 2

  # Right Drag release
  bindsym $mod+s exec xdotool mouseup 3

  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym $mod+n mode "default"
}

bindsym $mod+n mode "mouse"

# set primary gruvbox colorscheme colors
# stolen from: https://github.com/a-schaefers/i3-wm-gruvbox-theme
set $bg #1c1c1c
set $red #cc241d
set $green #98971a
set $yellow #d79921
set $blue #458588
set $purple #b16286
set $aqua #689d68
set $gray #a89984
set $darkgray #1d2021

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    # Iosevka NF icons are too small, so we use icons from FontAwesome
    font pango:Iosevka, FontAwesome 10

    # output primary
    status_command i3status-rs ~/.config/i3/i3status-rs.toml
    colors {
        # bar background color
        background $bg
        # text color used for blocks that do not have a color specified.
        statusline $yellow
        # workspaces section
        #                    border    backgr    text
        focused_workspace    $aqua     $aqua     $darkgray
        inactive_workspace   $darkgray $darkgray $yellow
        active_workspace     $darkgray $darkgray $yellow
        urgent_workspace     $red      $red      $bg
    }
}

# class                 border    backgr    text       indicator   child_border
client.focused          $blue     $blue     $darkgray  $purple     $darkgray
client.focused_inactive $darkgray $darkgray $yellow    $purple     $darkgray
client.unfocused        $darkgray $darkgray $yellow    $purple     $darkgray
client.urgent           $red      $red      $white     $red        $red
